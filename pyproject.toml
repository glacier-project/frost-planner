[tool.poetry]
name = "frost_planner"
version = "0.2.2"
description = "A Python library for solving Flexible Job-Shop (FJS) scheduling problems."
authors = ["Sebastiano Gaiardelli <sebastiano.gaiardelli@univr.it>"]
license = "BSD-2-Clause"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.11.7"
pandas = "^2.3.2"
matplotlib = "^3.10.5"
pyqt6 = "^6.9.1"
argparse = "^1.4.0"
logging = "^0.4.9.6"
rich = "^13.0.0"

[tool.poetry.group.dev.dependencies]
radon = "^6.0.1"
lizard = "^1.17.13"
pre-commit = "^4.0.1"
mypy = "^1.13.0"
ruff = "^0.8.3"
tox = "^4.23.2"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.4"
pytest-cov = "^6.0.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^8.1.3"
sphinx-rtd-theme = "^3.0.2"
sphinx-autoapi = "^3.4.0"
furo = "^2024.8.6"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# [tool.black]
# line-length = 88
# target-version = ['py39', 'py310', 'py311']
# skip-string-normalization = false

# [tool.flake8]
# max-line-length = 88

# [tool.ruff]
# line-length = 88
# target-version = "py311"

# [tool.ruff.lint]
# select = ["ALL"]
# ignore = [
#     "ANN", # flake8-annotations
#     "COM", # flake8-commas
#     "C90", # mccabe complexity
#     "DJ",  # django
#     "EXE", # flake8-executable
#     "T10", # debugger
#     "TID", # flake8-tidy-imports
# 
#     "D212", # multi-line-summary-first-line
#     "D213", # multi-line-summary-second-line
#     "D401", # First line of docstring should be in imperative mood
#     "D205", # 1 blank line required between summary line and description
#     "D200", # One-line docstring should fit on one line with quotes
# 
#     # Ignore not useful for tests
#     "S101", # Use of assert detected (fine in tests)
#     "D100", # Missing docstring in public module
#     "D101", # Missing docstring in public class
#     "D102", # Missing docstring in public method
#     "D103", # Missing docstring in public function
#     "D104", # Missing docstring in public package
#     "PLR2004", # Magic value used in comparison
# ]

[tool.mypy]
enable_error_code = ["ignore-without-code", "redundant-self", "truthy-iterable"]
disable_error_code = [
    "annotation-unchecked",
    "import-not-found",
    "import-untyped",
]
python_version = "3.10"
show_error_codes = true
follow_imports = "normal"
local_partial_types = true
strict_equality = true
no_implicit_optional = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
extra_checks = false
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
warn_return_any = true
warn_unreachable = true
